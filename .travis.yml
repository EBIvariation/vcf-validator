sudo:
  - false

language:
  - cpp

cache:
  directories:
    - linux_dependencies
    - osx_dependencies

matrix:
  include:

      # OS X Clang
    - os: osx
      osx_image: xcode9.3
      env: C_COMPILER=clang CXX_COMPILER=clang++
      before_install:
        - brew install ninja

      # OS X GCC
    - os: osx
      osx_image: xcode9.3
      env: C_COMPILER=gcc CXX_COMPILER=g++
      before_install:
        - brew install ninja

    # Clang 4.0
    - os: linux
      compiler: clang
      env: C_COMPILER=clang-4.0 CXX_COMPILER=clang++-4.0
      addons:
        apt:
          sources:
            - boost-latest
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - libboost1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - libboost-regex1.55-dev
            - libboost-log1.55-dev
            - ninja-build

    # Clang 5.0
    - os: linux
      compiler: clang
      env: C_COMPILER=clang-5.0 CXX_COMPILER=clang++-5.0
      addons:
        apt:
          sources:
            - boost-latest
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - libboost1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - libboost-regex1.55-dev
            - libboost-log1.55-dev
            - ninja-build

    # GCC 4.8
    - os: linux
      compiler: gcc
      env: C_COMPILER=gcc-4.8 CXX_COMPILER=g++-4.8
      addons:
        apt:
          sources:
            - boost-latest
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.8
            - g++-4.8
            - libboost1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - libboost-regex1.55-dev
            - libboost-log1.55-dev
            - ninja-build

    # GCC 5
    - os: linux
      compiler: gcc
      env: C_COMPILER=gcc-5 CXX_COMPILER=g++-5
      addons:
        apt:
          sources:
            - boost-latest
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - g++-5
            - libboost1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - libboost-regex1.55-dev
            - libboost-log1.55-dev
            - ninja-build

    # GCC 6
    - os: linux
      compiler: gcc
      env: C_COMPILER=gcc-6 CXX_COMPILER=g++-6
      addons:
        apt:
          sources:
            - boost-latest
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - libboost1.55-dev
            - libboost-filesystem1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - libboost-regex1.55-dev
            - libboost-log1.55-dev
            - ninja-build


before_script:
  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      ./install_dependencies.sh
      export PATH=$PATH:$PWD/linux_dependencies/odb-2.4.0-x86_64-linux-gnu/bin/
    fi
  - |
    if [[ $TRAVIS_OS_NAME == "osx" ]]; then
      ./install_dependencies.sh osx
      export PATH=$PATH:$PWD/osx_dependencies/odb-2.4.0-i686-macosx/bin/
    fi


script:
  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      cmake -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_FLAGS="-Ilinux_dependencies/libodb-2.4.0 -Ilinux_dependencies/libodb-sqlite-2.4.0" -DCMAKE_EXE_LINKER_FLAGS="-Wl,-rpath,linux_dependencies/ -Llinux_dependencies/"  -DEXT_LIB_PATH=$PWD/linux_dependencies/ ./ -GNinja
    fi
  - |
    if [[ $TRAVIS_OS_NAME == "osx" ]]; then
      cmake -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_FLAGS="-Iosx_dependencies/libodb-2.4.0 -Iosx_dependencies/libodb-sqlite-2.4.0" -DCMAKE_EXE_LINKER_FLAGS="-Wl,-rpath,osx_dependencies/ -Losx_dependencies/"  -DEXT_LIB_PATH=$PWD/osx_dependencies/ ./ -GNinja
    fi

  - ninja -v -j2
  - ninja test
  - |
    if [[ $TRAVIS_OS_NAME == "osx" ]]; then
      otool -L bin/vcf_validator
    fi
